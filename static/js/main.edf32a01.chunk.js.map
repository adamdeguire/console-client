{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","apiConfig.js","api/search.js","components/SearchBar/SearchBar.js","components/Header/Header.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/posts.js","components/posts/EditPost/EditPost.js","components/comments/CreateComment/CreateComment.js","api/comments.js","components/comments/EditComment.js","components/PostDate/PostDate.js","components/comments/Comment/Comment.js","components/comments/Comments.js","components/posts/PostContainer/PostContainer.js","components/posts/CreatePost/CreatePost.js","components/Home/Home.js","components/posts/Post.js","components/Profile/Profile.js","api/profile.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","apiUrls","apiUrl","window","location","hostname","resources","search","cancel","query","a","axios","CancelToken","source","cancelToken","token","res","result","data","results","isCancel","console","log","makeRequestCreator","SearchBar","users","loading","value","val","onChangeHandler","e","target","map","_id","username","noResults","renderUsers","length","noResultsJsx","onChange","placeholder","authenticatedOptions","exact","unauthenticatedOptions","Header","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","signIn","credentials","url","method","email","password","indexPostsFailure","SignUp","handleChange","event","name","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","Button","withRouter","SignIn","toggleChecked","prevState","checked","onSignIn","userJSON","JSON","stringify","localStorage","setItem","Check","label","SignOut","clearUser","headers","Authorization","signOut","finally","removeItem","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showPost","postId","UpdatePost","userInput","currState","post","handleSubmit","match","title","content","updatePost","params","err","onValueChange","highlight","languages","js","padding","size","CreateComment","onCreateComment","timestamp","Date","now","createdAt","updateComments","showComments","toggleComments","comment","ownerName","owner","createComment","uuid","created","autoComplete","EditComment","onEditComment","toggle","newComment","updateComment","deleted","pathname","PostDate","componentDidMount","date","seconds","minutes","hours","days","weeks","months","dateDiff","unit","toFixed","s","dateText","isNaN","Comment","property","onDestroyComment","commentId","userId","deleteComment","showEdit","showButtons","renderButtons","modifyButtonsJsx","onClick","editCommentJsx","Comments","comments","postOwner","PostContainer","goToPost","classList","contains","newComments","index","findIndex","el","splice","commentsJsx","CreatePost","onCreatePost","updatePosts","createPost","Home","posts","indexPosts","reverse","Post","destroy","deletePost","Spinner","animation","role","Profile","getUserProfile","path","_isMounted","getProfile","unlisten","listen","pathStart","split","App","msgAlerts","filter","msg","parse","getItem","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.edf32a01.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst AuthenticatedRoute = ({\r\n  user,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  return user && render\r\n    ? <Route {...rest} render={render} />\r\n    : (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          user\r\n            ? <Component {...props} />\r\n            : <Redirect to='/sign-in' />\r\n        }\r\n      />\r\n    )\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport './AutoDismissAlert.scss'\r\n\r\nclass AutoDismissAlert extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      show: true\r\n    }\r\n    this.timeoutId = null\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.timeoutId = setTimeout(this.handleClose, 5000)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    clearTimeout(this.timeoutId)\r\n  }\r\n\r\nhandleClose = () => this.setState({ show: false })\r\n\r\nrender () {\r\n  const { variant, heading, message, deleteAlert, id } = this.props\r\n\r\n  // Delete this alert after the fade animation time (300 ms by default)\r\n  if (!this.state.show) {\r\n    setTimeout(() => {\r\n      deleteAlert(id)\r\n    }, 300)\r\n  }\r\n\r\n  return (\r\n    <Alert\r\n      dismissible\r\n      show={this.state.show}\r\n      variant={variant}\r\n      onClose={this.handleClose}>\r\n      <div className='container'>\r\n        <Alert.Heading>{heading}</Alert.Heading>\r\n        <p className='alert-body'>{message}</p>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: 'https://console-app-api.herokuapp.com',\r\n  development: 'http://localhost:4741'\r\n}\r\n\r\nwindow.location.hostname === 'localhost'\r\n  ? apiUrl = apiUrls.development\r\n  : apiUrl = apiUrls.production\r\n\r\nexport default apiUrl\r\n","import axios from 'axios'\r\n\r\nexport const truncStr = (string, limit) => {\r\n  return string.length > limit\r\n    ? string\r\n      .trim()\r\n      .substring(0, limit - 3)\r\n      .trim() + '...'\r\n    : string\r\n}\r\n\r\nconst resources = {}\r\n\r\nconst makeRequestCreator = () => {\r\n  let cancel\r\n\r\n  return async query => {\r\n    if (cancel) cancel.cancel()\r\n    // Create a new CancelToken\r\n    cancel = axios.CancelToken.source()\r\n    try {\r\n      if (resources[query]) { return resources[query] }\r\n      const res = await axios(query, { cancelToken: cancel.token })\r\n      const result = res.data.results\r\n      // Store response\r\n      resources[query] = result\r\n\r\n      return result\r\n    } catch (error) {\r\n      axios.isCancel(error)\r\n        ? console.log('Request canceled', error.message)\r\n        : console.log('Something went wrong: ', error.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport const search = makeRequestCreator()\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport apiUrl from '../../apiConfig'\r\nimport { search } from '../../api/search'\r\n\r\nimport './SearchBar.scss'\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    users: null,\r\n    loading: false,\r\n    value: ''\r\n  };\r\n\r\n  search = async val => {\r\n    this.setState({ loading: true })\r\n    const results = await search(`${apiUrl}/users?users=${val}`)\r\n    const users = results\r\n\r\n    this.setState({ users, loading: false })\r\n  }\r\n\r\n  onChangeHandler = async e => {\r\n    this.search(e.target.value)\r\n    this.setState({ value: e.target.value })\r\n  }\r\n\r\n  get renderUsers () {\r\n    let users = ''\r\n    if (this.state.users) {\r\n      users = this.state.users.map(user => {\r\n        return (\r\n          <div className='result' key={user._id}>\r\n            <Link className='resultLink' to={`/posts?user=${user._id}`} >{user.username}</Link>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    if (!this.state.value) {\r\n      users = ''\r\n    }\r\n\r\n    return users\r\n  }\r\n\r\n  render () {\r\n    const { value } = this.state\r\n    const noResults = this.renderUsers.length === 0 && value.length > 0\r\n    const noResultsJsx = (<div className=\"result\">No results</div>)\r\n    return (\r\n      <>\r\n        <div className=\"searchBar\">\r\n          <input className=\"searchInput\"\r\n            value={value}\r\n            onChange={e => this.onChangeHandler(e)}\r\n            placeholder=\"Search Users\"\r\n          />\r\n        </div>\r\n        <div className=\"resultContainer\">\r\n          {noResults ? noResultsJsx : this.renderUsers}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport './Header.scss'\r\n\r\nconst authenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink exact to='/home' className='nav-link'>Home</NavLink>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar id=\"header\" expand='md'>\r\n    <Navbar.Brand>\r\n      <Link to='/home' id=\"headerTitle\">{'{ console }'}</Link>\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <Navbar.Collapse id='basic-navbar-nav'>\r\n      <Nav className='ml-auto'>\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n    <SearchBar />\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/sign-up/',\r\n    data: {\r\n      credentials: {\r\n        username: credentials.username,\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        password_confirmation: credentials.passwordConfirmation\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-in/',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n  return axios({\r\n    url: apiUrl + '/change-password/',\r\n    method: 'PATCH',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      passwords: {\r\n        old: passwords.oldPassword,\r\n        new: passwords.newPassword\r\n      }\r\n    }\r\n  })\r\n}\r\n","/* eslint-disable no-tabs */\r\n// AUTH\r\nexport const signUpSuccess =\r\n\t'Successfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure =\r\n\t'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure =\r\n\t'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure =\r\n\t'Failed to change passwords. Check your old password and try again.'\r\n\r\n// POSTS\r\nexport const createPostSuccess = 'Your post has successfully been created.'\r\nexport const createPostFailure =\r\n\t'Failed to create post, please double check your input and try again. Error: '\r\nexport const indexPostsFailure =\r\n\t'Couldn\\'t find posts, please refresh the page and try again. Error: '\r\nexport const showPostFailure =\r\n\t'Couldn\\'t find this post. Please refresh the page and try again. Error: '\r\nexport const deletePostSuccess = 'Your post has successfully been deleted.'\r\nexport const deletePostFailure =\r\n\t'Something went wrong while deleting this post, please refresh and try again. Error: '\r\n\r\n// COMMENTS\r\nexport const createCommentSuccess = 'Your comment has successfully been created.'\r\nexport const createCommentFailure =\r\n\t'Failed to create comment, please double check your input and try again. Error: '\r\nexport const indexCommentsFailure =\r\n\t'Couldn\\'t find comments, please refresh the page and try again. Error: '\r\nexport const showCommentFailure =\r\n\t'Couldn\\'t find this comment. Please refresh the page and try again. Error: '\r\nexport const deleteCommentSuccess = 'Your comment has successfully been deleted.'\r\nexport const deleteCommentFailure =\r\n\t'Something went wrong while deleting this comment, please refresh and try again. Error: '\r\n","/* eslint-disable no-tabs */\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignUp extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignUp = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signUp(this.state)\r\n    .then(() => signIn(this.state))\r\n    .then((res) => setUser(res.data.user))\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { username, email, password, passwordConfirmation } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign Up</h3>\r\n        <Form onSubmit={this.onSignUp}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='username'\r\n              name='username'\r\n              value={username}\r\n              placeholder='Enter Username'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter Email'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='passwordConfirmation'>\r\n            <Form.Label>Password Confirmation</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='passwordConfirmation'\r\n              value={passwordConfirmation}\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignIn extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      checked: false\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\ntoggleChecked = () => {\r\n  this.setState(prevState => ({ checked: !prevState.checked }))\r\n}\r\n\r\nonSignIn = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n  const { checked } = this.state\r\n\r\n  signIn(this.state)\r\n    .then((res) => {\r\n      setUser(res.data.user)\r\n      return res.data.user\r\n    })\r\n    .then(user => {\r\n      const userJSON = JSON.stringify(user)\r\n      if (window && checked) window.localStorage.setItem('user', userJSON)\r\n    })\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/home'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '' })\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password, checked } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <Form onSubmit={this.onSignIn}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>Submit</Button>\r\n          <Form.Check\r\n            type='checkbox'\r\n            id='default-checkbox'\r\n            label='Keep me logged in'\r\n            checked={checked}\r\n            onChange={this.toggleChecked}\r\n          />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignIn)\r\n","import { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nclass SignOut extends Component {\r\n  componentDidMount () {\r\n    const { msgAlert, history, clearUser, user } = this.props\r\n\r\n    signOut(user)\r\n      .finally(() =>\r\n        msgAlert({\r\n          heading: 'Signed Out Successfully',\r\n          message: signOutSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .finally(() => {\r\n        if (window) window.localStorage.removeItem('user')\r\n      })\r\n      .finally(() => history.push('/sign-in'))\r\n      .finally(() => clearUser())\r\n  }\r\n\r\n  render () {\r\n    return ''\r\n  }\r\n}\r\n\r\nexport default withRouter(SignOut)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass ChangePassword extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonChangePassword = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, user } = this.props\r\n\r\n  changePassword(this.state, user)\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Change Password Success',\r\n        message: changePasswordSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ oldPassword: '', newPassword: '' })\r\n      msgAlert({\r\n        heading: 'Change Password Failed with error: ' + error.message,\r\n        message: changePasswordFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { oldPassword, newPassword } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Change Password</h3>\r\n        <Form onSubmit={this.onChangePassword}>\r\n          <Form.Group controlId='oldPassword'>\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='oldPassword'\r\n              value={oldPassword}\r\n              type='password'\r\n              placeholder='Old Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='newPassword'>\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='newPassword'\r\n              value={newPassword}\r\n              type='password'\r\n              placeholder='New Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(ChangePassword)\r\n","/* eslint-disable no-tabs */\r\nimport apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const createPost = (post, user) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/posts/',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      post: {\r\n        owner: post.owner,\r\n        title: post.title,\r\n        content: post.content\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const indexPosts = (user) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: apiUrl + '/home/',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showPost = (user, postId) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `${apiUrl}/posts/${postId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const deletePost = (user, postId) => {\r\n  return axios({\r\n    method: 'DELETE',\r\n    url: `${apiUrl}/posts/${postId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const updatePost = (post, user, postId) => {\r\n  return axios({\r\n    method: 'PATCH',\r\n    url: `${apiUrl}/posts/${postId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      post: {\r\n        title: post.title,\r\n        content: post.content\r\n      }\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n// API request\r\nimport { updatePost, showPost } from '../../../api/posts'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Editor from 'react-simple-code-editor'\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\n\r\nimport './EditPost.scss'\r\n\r\nclass UpdatePost extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      // using null as a starting value will help us manage the \"loading state\" of our UpdatePost component\r\n      post: { // this should not be null\r\n        title: '', // must provide starting values for the form inputs\r\n        content: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\r\n    const { match, user, msgAlert } = this.props\r\n\r\n    showPost(user, match.params.id)\r\n      .then(res => this.setState({ post: res.data.post }))\r\n      .then(() => msgAlert({\r\n        heading: 'Show post success',\r\n        message: 'Check out the post',\r\n        variant: 'success'\r\n      }))\r\n      .catch(err => msgAlert({\r\n        heading: 'Show post failed :(',\r\n        message: 'Something went wrong: ' + err.message,\r\n        variant: 'danger'\r\n      }))\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // because `this.state.post` is an object with multiple keys, we have to do some fancy updating\r\n    const userInput = { [event.target.name]: event.target.value }\r\n    this.setState(currState => {\r\n      // \"Spread\" out current post state key/value pairs, then add the new one at the end\r\n      // this will override the old key/value pair in the state but leave the others untouched\r\n      return { post: { ...currState.post, ...userInput } }\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const { user, msgAlert, history, match } = this.props\r\n\r\n    updatePost(this.state.post, user, match.params.id)\r\n      .then(res => history.push('/posts/' + match.params.id))\r\n      .then(() => msgAlert({ heading: 'Post Updated!', message: 'Nice work, go check out your post.', variant: 'success' }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Post update failed :(',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { post } = this.state\r\n    const { match } = this.props\r\n\r\n    return (\r\n      <>\r\n        <h5 id=\"updatePostHeader\">Edit Post</h5>\r\n        <div className='postContainer'>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group controlId='title'>\r\n              <Form.Control\r\n                required\r\n                className='titleInput'\r\n                name='title'\r\n                value={post.title}\r\n                placeholder='Post Title'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='content'>\r\n              <Editor className=\"border codeEditor\"\r\n                value={post.content}\r\n                onValueChange={content => this.setState({ content })}\r\n                highlight={content => highlight(content, languages.js)}\r\n                padding={10}\r\n              />\r\n            </Form.Group>\r\n            <Button id='updatePostButton' variant='primary' type='submit'>Update</Button>\r\n          </Form>\r\n        </div>\r\n        <Link to={`/posts/${match.params.id}`}>\r\n          <Button size='sm' className='btn'>Go back</Button>\r\n        </Link>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(UpdatePost)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { createComment } from '../../../api/comments'\r\nimport { createCommentFailure } from '../../AutoDismissAlert/messages'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport './CreateComment.scss'\r\n\r\nclass CreateComment extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      ownerName: props.user.username,\r\n      content: '',\r\n      created: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({ _id: uuid() })\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n\r\n  onCreateComment = (event) => {\r\n    event.preventDefault()\r\n    const timestamp = Date.now()\r\n    this.setState({ createdAt: timestamp }, () => {\r\n      const { msgAlert, user, postId, updateComments, showComments, toggleComments } = this.props\r\n      const { content, _id, timestamp } = this.state\r\n\r\n      createComment(this.state, user, postId)\r\n        .then(() =>\r\n          updateComments({\r\n            ownerName: user.username,\r\n            owner: user._id,\r\n            content,\r\n            _id,\r\n            createdAt: timestamp\r\n          })\r\n        )\r\n        .then(() => { if (!showComments) toggleComments() })\r\n        .then(() => { this.setState({ content: '' }) })\r\n        .catch((err) => {\r\n          msgAlert({\r\n            heading: 'Couldn\\'t Create Comment',\r\n            message: createCommentFailure + err.message,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n        .finally(() => {\r\n          this.setState({ _id: uuid() })\r\n        })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { content } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.onCreateComment}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              required\r\n              autoComplete=\"off\"\r\n              className=\"commentInput\"\r\n              name='content'\r\n              value={content}\r\n              placeholder='Add Comment'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateComment)\r\n","/* eslint-disable no-tabs */\r\nimport apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const createComment = (comment, user, postId) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + `/posts/${postId}/comments/`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      comment: {\r\n        ownerName: comment.ownerName,\r\n        owner: comment.owner,\r\n        content: comment.content,\r\n        _id: comment._id,\r\n        createdAt: comment.createdAt\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateComment = (comment, user, postId) => {\r\n  return axios({\r\n    method: 'PATCH',\r\n    url: apiUrl + `/posts/${postId}/comments/`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      comment: {\r\n        ownerName: comment.ownerName,\r\n        owner: comment.owner,\r\n        content: comment.content,\r\n        _id: comment._id\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteComment = (user, postId, commentId) => {\r\n  return axios({\r\n    method: 'DELETE',\r\n    url: apiUrl + `/posts/${postId}/comments/`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      commentId: commentId,\r\n      userId: user._id\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { updateComment } from '../../api/comments'\r\n\r\nclass EditComment extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      deleted: false,\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { comment } = this.props\r\n    this.setState({ content: comment.content })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  onEditComment = (event) => {\r\n    event.preventDefault()\r\n    const { comment, user, postId, updateComments, toggle } = this.props\r\n    const { content } = this.state\r\n    const newComment = { ...comment }\r\n    newComment.content = content\r\n    updateComment(newComment, user, postId)\r\n    updateComments(newComment)\r\n    toggle('showEdit')\r\n  }\r\n\r\n  render () {\r\n    const { deleted, content } = this.state\r\n    if (deleted) {\r\n      return <Redirect to={\r\n        { pathname: '/home' }\r\n      } />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.onEditComment}>\r\n          <Form.Group controlId='content'>\r\n            <Form.Control\r\n              required\r\n              name='content'\r\n              value={content}\r\n              placeholder='Comment'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>Update</Button>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(EditComment)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport './PostDate.scss'\r\n\r\nclass PostDate extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      dateText: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { createdAt } = this.props\r\n    const date = new Date(createdAt)\r\n\r\n    const seconds = ((Date.now() - date) / 1000)\r\n    const minutes = seconds / 60\r\n    const hours = minutes / 60\r\n    const days = hours / 24\r\n    const weeks = days / 7\r\n    const months = weeks / 4\r\n    const years = months / 12\r\n\r\n    const dateDiff =\r\n        seconds < 60\r\n          ? { value: seconds, unit: 'second' }\r\n          : minutes < 60\r\n            ? { value: minutes, unit: 'minute' }\r\n            : hours < 24\r\n              ? { value: hours, unit: 'hour' }\r\n              : days < 7\r\n                ? { value: days, unit: 'day' }\r\n                : weeks < 4\r\n                  ? { value: weeks, unit: 'week' }\r\n                  : months < 12\r\n                    ? { value: months, unit: 'month' }\r\n                    : { value: years, unit: 'year' }\r\n\r\n    dateDiff.value = dateDiff.value.toFixed(0)\r\n\r\n    const s = (dateDiff.value === '1')\r\n      ? ''\r\n      : 's'\r\n\r\n    const dateText = isNaN(dateDiff.value)\r\n      ? 'Just now'\r\n      : `${dateDiff.value} ${dateDiff.unit}${s} ago`\r\n\r\n    this.setState({ dateText })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"date\">\r\n        {this.state.dateText}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(PostDate)\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport EditComment from '../EditComment'\r\nimport { deleteComment } from '../../../api/comments'\r\nimport PostDate from '../../PostDate/PostDate'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Comment.scss'\r\n\r\nclass Comment extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      comment: null,\r\n      showEdit: false,\r\n      showButtons: false,\r\n      deleted: false\r\n    }\r\n  }\r\n\r\n  toggle = (property) => {\r\n    this.setState((prevState) => ({ [property]: !prevState[property] }))\r\n  }\r\n\r\n  onDestroyComment = (event) => {\r\n    event.preventDefault()\r\n    const { comment, user, postId, updateComments } = this.props\r\n    deleteComment(user, postId, comment._id)\r\n    updateComments(comment._id)\r\n  }\r\n\r\n  //\r\n\r\n  render () {\r\n    const { deleted, showEdit, showButtons } = this.state\r\n    const { comment, user, msgAlert, postId, updateComments } = this.props\r\n    const renderButtons = (comment.owner === user._id && showButtons && !showEdit)\r\n\r\n    const modifyButtonsJsx = (\r\n      <>\r\n        <Button\r\n          size='sm'\r\n          variant='secondary'\r\n          className=\"commentButton\"\r\n          onClick={() => this.toggle('showEdit')}>\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          size='sm'\r\n          variant='danger'\r\n          className=\"commentButton\"\r\n          onClick={this.onDestroyComment}>\r\n          Delete\r\n        </Button>\r\n      </>\r\n    )\r\n\r\n    const editCommentJsx = (\r\n      <>\r\n        <EditComment\r\n          toggle={this.toggle}\r\n          updateComments={updateComments}\r\n          msgAlert={msgAlert}\r\n          comment={comment}\r\n          postId={postId}\r\n          user={user}\r\n        />\r\n        <Button size='sm' variant='danger' onClick={() => this.toggle('showEdit')}>Cancel</Button>\r\n      </>\r\n    )\r\n\r\n    if (deleted) {\r\n      return <Redirect to={\r\n        { pathname: '/home' }\r\n      } />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div onClick={() => this.toggle('showButtons')}>\r\n          <div className=\"comment\">\r\n            <Link\r\n              to={`/profile/${comment.ownerName}`}\r\n              className=\"commentOwner\">{comment.ownerName}\r\n            </Link>\r\n            {showEdit ? editCommentJsx : comment.content}\r\n            <PostDate createdAt={comment.createdAt}/>\r\n            {renderButtons ? modifyButtonsJsx : ''}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Comment)\r\n","import React, { Component } from 'react'\r\nimport Comment from './Comment/Comment'\r\n\r\nclass Comments extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      comments: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { comments, msgAlert, user, postId, postOwner, updateComments } = this.props\r\n    return (\r\n      <div>\r\n        {comments.map((comment) => (\r\n          <div key={comment._id}>\r\n            <Comment\r\n              updateComments={updateComments}\r\n              postOwner={postOwner}\r\n              msgAlert={msgAlert}\r\n              comment={comment}\r\n              postId={postId}\r\n              user={user}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Comments\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport CreateComment from '../../comments/CreateComment/CreateComment'\r\nimport Comments from '../../comments/Comments'\r\nimport PostDate from '../../PostDate/PostDate'\r\n\r\nimport Editor from 'react-simple-code-editor'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-python'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/themes/prism-dark.css'\r\n\r\nimport './PostContainer.scss'\r\n\r\nclass PostContainer extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      comments: [],\r\n      showComments: false\r\n    }\r\n  }\r\n\r\n  goToPost = (e) => {\r\n    if (!e.target.classList.contains('post')) return\r\n    const { post, history } = this.props\r\n    history.push(`/posts/${post._id}`)\r\n  }\r\n\r\n  updateComments = (comment) => {\r\n    const { comments } = this.state\r\n    const newComments = [...comments]\r\n    if (typeof comment === 'string') {\r\n      const index = comments.findIndex(el => el._id === comment)\r\n      newComments.splice(index, 1)\r\n      this.setState({ comments: newComments })\r\n    } else {\r\n      const index = comments.findIndex(el => el._id === comment._id)\r\n      if (index >= 0) {\r\n        newComments.splice(index, 1, comment)\r\n\r\n        this.setState({ comments: newComments })\r\n      } else {\r\n        this.setState(prevState => {\r\n          return { comments: [...prevState.comments, comment] }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { post } = this.props\r\n    this.setState({ comments: post.comments })\r\n  }\r\n\r\n  toggleComments = () => {\r\n    this.setState(prevState => {\r\n      return { showComments: !prevState.showComments }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlert, user, post } = this.props\r\n    const { showComments, comments } = this.state\r\n    const s = comments.length === 1 ? '' : 's'\r\n    const commentsJsx = (\r\n      <>\r\n        <Comments\r\n          updateComments={this.updateComments}\r\n          msgAlert={msgAlert}\r\n          user={user}\r\n          comments={comments}\r\n          postId={post._id}\r\n        />\r\n        <CreateComment\r\n          updateComments={this.updateComments}\r\n          toggleComments={this.toggleComments}\r\n          showComments={showComments}\r\n          msgAlert={msgAlert}\r\n          user={user}\r\n          postId={post._id}\r\n          postOwner={post.owner._id}\r\n        />\r\n      </>\r\n    )\r\n    return (\r\n      <div className=\"post postContainer\" onClick={e => this.goToPost(e)}>\r\n        <div className=\"post postTitle\">\r\n          <Link\r\n            to={`/profile/${post.owner.username}`}\r\n            className=\"postOwner\">{post.owner.username}\r\n          </Link>\r\n          {post.title}\r\n          <PostDate createdAt={post.createdAt}/>\r\n        </div>\r\n        <Editor className=\"border codeEditor post postContent\"\r\n          placeholder='// your code here'\r\n          value={post.content}\r\n          onValueChange={() => null}\r\n          highlight={content => highlight(content, languages.js)}\r\n          padding={10}\r\n        />\r\n        <Button className=\"showComments\" size='sm' variant='outline-primary' onClick={this.toggleComments}>\r\n          {showComments ? 'Hide Comments' : `${comments.length} Comment${s}`}\r\n        </Button>\r\n        {showComments ? commentsJsx : ''}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(PostContainer)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { createPost } from '../../../api/posts'\r\nimport { createPostSuccess, createPostFailure } from '../../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Editor from 'react-simple-code-editor'\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-python'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/themes/prism-dark.css'\r\n\r\nimport './CreatePost.scss'\r\nimport '../PostContainer/PostContainer.scss'\r\n\r\nclass CreatePost extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      title: '',\r\n      content: '',\r\n      postId: null\r\n    }\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n\r\n  onCreatePost = (event) => {\r\n    event.preventDefault()\r\n\r\n    const { msgAlert, history, user, updatePosts } = this.props\r\n\r\n    createPost(this.state, user)\r\n      .then(res => {\r\n        this.setState({ postId: res.data.post._id })\r\n        return res\r\n      })\r\n      .then(res => updatePosts({\r\n        owner: user,\r\n        title: this.state.title,\r\n        content: this.state.content,\r\n        comments: [],\r\n        _id: res.data.post._id\r\n      }))\r\n      .then(() => history.push('/home'))\r\n      .then(() => {\r\n        msgAlert({\r\n          heading: 'Post Created',\r\n          message: createPostSuccess,\r\n          variant: 'success'\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: createPostFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { title } = this.state\r\n\r\n    return (\r\n      <>\r\n        <h5 id=\"createPostHeader\">Create Post</h5>\r\n        <div className='postContainer'>\r\n          <Form onSubmit={this.onCreatePost}>\r\n            <Form.Group controlId='title'>\r\n              <Form.Control\r\n                required\r\n                autoComplete=\"off\"\r\n                className='titleInput'\r\n                name='title'\r\n                value={title}\r\n                placeholder='Post Title'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='content'>\r\n              <Editor className=\"border codeEditor\"\r\n                placeholder='// your code here'\r\n                value={this.state.content}\r\n                onValueChange={content => this.setState({ content })}\r\n                highlight={content => highlight(content, languages.js)}\r\n                padding={10}\r\n              />\r\n            </Form.Group>\r\n            <Button id='createPostButton' variant='primary' type='submit'>Create</Button>\r\n          </Form>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreatePost)\r\n","import React, { Component } from 'react'\r\n\r\nimport { indexPosts } from '../../api/posts'\r\nimport { indexPostsFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport PostContainer from '../posts/PostContainer/PostContainer'\r\nimport CreatePost from '../posts/CreatePost/CreatePost'\r\n\r\nclass Home extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      posts: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n\r\n    indexPosts(user)\r\n      .then(res => this.setState({\r\n        posts: res.data.posts.reverse()\r\n      }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: indexPostsFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  updatePosts = (post) => {\r\n    this.setState(prevState => {\r\n      return { posts: [post, ...prevState.posts] }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.state\r\n    const { user, msgAlert } = this.props\r\n    return (\r\n      <div>\r\n        <CreatePost updatePosts={this.updatePosts} msgAlert={msgAlert} user={user} />\r\n        {posts.map(post => (\r\n          <div key={post._id}>\r\n            <PostContainer\r\n              msgAlert={msgAlert}\r\n              user={user}\r\n              post={post}\r\n              comments={post.comments}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport { deletePost, showPost } from '../../api/posts'\r\nimport { showPostFailure, deletePostSuccess, deletePostFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport PostContainer from './PostContainer/PostContainer'\r\n\r\nclass Post extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      post: null,\r\n      deleted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { user, match, msgAlert } = this.props\r\n\r\n    showPost(user, match.params.id)\r\n      .then(res => this.setState({ post: res.data.post }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: showPostFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  destroy = () => {\r\n    const { user, match, msgAlert } = this.props\r\n    deletePost(user, match.params.id)\r\n      .then(() => {\r\n        msgAlert({\r\n          heading: 'Post Deleted',\r\n          message: deletePostSuccess,\r\n          variant: 'success'\r\n        })\r\n      })\r\n      .then(() => this.setState({ deleted: true }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Delete Post',\r\n          message: deletePostFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { post, deleted } = this.state\r\n    const { user, msgAlert } = this.props\r\n\r\n    const modifyButtonsJsx = (\r\n      <>\r\n        <Link to={`/posts/${this.props.match.params.id}/edit`}>\r\n          <Button size='sm' variant='primary'>Edit</Button>\r\n        </Link>\r\n        <Button size='sm' variant='danger' onClick={this.destroy}>Delete post</Button>\r\n      </>\r\n    )\r\n\r\n    if (!post) {\r\n      return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )\r\n    }\r\n\r\n    if (deleted) {\r\n      return <Redirect to={\r\n        { pathname: '/home' }\r\n      } />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <PostContainer\r\n          msgAlert={msgAlert}\r\n          user={user}\r\n          post={post}\r\n          comments={post.comments}\r\n        />\r\n        <Link to=\"/home\">\r\n          <Button size='sm' className='btn'>Go back</Button>\r\n        </Link>\r\n        {post.owner._id === user._id ? modifyButtonsJsx : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Post)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { getProfile } from '../../api/profile'\r\nimport { indexPostsFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport PostContainer from '../posts/PostContainer/PostContainer'\r\nimport CreatePost from '../posts/CreatePost/CreatePost'\r\n\r\nclass Profile extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this._isMounted = false\r\n\r\n    this.state = {\r\n      posts: [],\r\n      path: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this._isMounted = true\r\n    const { history } = this.props\r\n    const { path } = this.state\r\n    this.getUserProfile(history.location.pathname)\r\n    this.setState({ path: history.location.pathname })\r\n    this.unlisten = history.listen(location => {\r\n      const pathStart = location.pathname.split('/')[1]\r\n      if (location.pathname !== path && pathStart === 'profile') {\r\n        this.getUserProfile(location.pathname)\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this._isMounted = false\r\n    this.unlisten()\r\n  }\r\n\r\n  getUserProfile = (path) => {\r\n    if (this._isMounted) {\r\n      const { user, msgAlert } = this.props\r\n      getProfile(user, path)\r\n        .then(res => this.setState({ posts: res.data.posts }))\r\n        .catch(err => {\r\n          msgAlert({\r\n            heading: 'Couldn\\'t Create Post',\r\n            message: indexPostsFailure + err.message,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  updatePosts = (post) => {\r\n    this.setState(prevState => {\r\n      return { posts: [post, ...prevState.posts] }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.state\r\n    const { user, msgAlert } = this.props\r\n    return (\r\n      <div>\r\n        <CreatePost updatePosts={this.updatePosts} msgAlert={msgAlert} user={user} />\r\n        {posts.map(post => (\r\n          <div key={post._id}>\r\n            <PostContainer\r\n              msgAlert={msgAlert}\r\n              user={user}\r\n              post={post}\r\n              comments={post.comments}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile)\r\n","/* eslint-disable no-tabs */\r\nimport apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const getProfile = (user, location) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `${apiUrl}${location}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n","/* eslint-disable no-mixed-spaces-and-tabs */\r\n/* eslint-disable no-tabs */\r\nimport React, { Component } from 'react'\r\nimport { Route, withRouter } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport EditPost from './components/posts/EditPost/EditPost'\r\nimport Home from './components/Home/Home'\r\nimport Post from './components/posts/Post'\r\nimport Profile from './components/Profile/Profile'\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n\tsetUser = (user) => this.setState({ user })\r\n\r\n\tclearUser = () => this.setState({ user: null })\r\n\r\n\tdeleteAlert = (id) => {\r\n\t  this.setState((state) => {\r\n\t    return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n\t  })\r\n\t}\r\n\r\n\tmsgAlert = ({ heading, message, variant }) => {\r\n\t  const id = uuid()\r\n\t  this.setState((state) => {\r\n\t    return {\r\n\t      msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n\t    }\r\n\t  })\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t  const { history } = this.props\r\n\t  const user = JSON.parse(window.localStorage.getItem('user'))\r\n\t  if (window) {\r\n\t    this.setUser(user)\r\n\t    history.push('/home')\r\n\t  }\r\n\t}\r\n\r\n\trender () {\r\n\t  const { msgAlerts, user } = this.state\r\n\r\n\t  return (\r\n\t    <>\r\n\t      <Header user={user} />\r\n\t      {msgAlerts.map((msgAlert) => (\r\n\t        <AutoDismissAlert\r\n\t          key={msgAlert.id}\r\n\t          heading={msgAlert.heading}\r\n\t          variant={msgAlert.variant}\r\n\t          message={msgAlert.message}\r\n\t          id={msgAlert.id}\r\n\t          deleteAlert={this.deleteAlert}\r\n\t        />\r\n\t      ))}\r\n\t      <main className='container col-sm-12 col-lg-4'>\r\n\t        <Route\r\n\t          path='/sign-up'\r\n\t          render={() => (\r\n\t            <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\r\n\t          )}\r\n\t        />\r\n\t        <Route\r\n\t          path='/sign-in'\r\n\t          render={() => (\r\n\t            <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\r\n\t          )}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          path='/sign-out'\r\n\t          render={() => (\r\n\t            <SignOut\r\n\t              msgAlert={this.msgAlert}\r\n\t              clearUser={this.clearUser}\r\n\t              user={user}\r\n\t            />\r\n\t          )}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          path='/change-password'\r\n\t          render={() => (\r\n\t            <ChangePassword msgAlert={this.msgAlert} user={user} />\r\n\t          )}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t\t\t\t\t  exact\r\n\t          path='/posts/:id/edit'\r\n\t          render={() => <EditPost msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          exact\r\n\t          path='/home'\r\n\t          render={() => <Home msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          exact\r\n\t          path='/posts/:id'\r\n\t          render={() => <Post msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          exact\r\n\t          path='/profile/:username'\r\n\t          render={() => <Profile msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t      </main>\r\n\t    </>\r\n\t  )\r\n\t}\r\n}\r\n\r\nexport default withRouter(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst appJsx = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(appJsx, document.getElementById('root'))\r\n"],"sourceRoot":""}